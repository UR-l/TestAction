name: Auto Tag and Build

on:
  push:
    branches:
      - main  # 当推送到 main 分支时触发
    commit_message:
      - 'v*'  # 仅当提交信息中包含 v 开头的内容时触发

jobs:
  build_and_tag:
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 检查提交信息是否符合 "v*" 格式
      - name: Check commit message for version tag
        id: check_version
        run: |
          if [[ ! "${{ github.event.head_commit.message }}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+ ]]; then
            echo "Commit message doesn't match version format (vX.X.X). Skipping tag creation."
            exit 0
          fi
          echo "Commit message matches version format (vX.X.X), proceeding to create tag."
      
      # 创建 tag (如果满足条件)
      - name: Create Git tag
        if: steps.check_version.outcome == 'success'
        run: |
          TAG_NAME=${{ github.event.head_commit.message }}
          git tag $TAG_NAME
          git push origin $TAG_NAME

      # 安装依赖项
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y cmake build-essential

      # 配置和编译项目
      - name: Configure and Build
        run: |
          mkdir build
          cd build
          cmake ..
          cmake --build .

      # 打包产物
      - name: Archive build artifacts
        run: |
          mkdir -p output
          cp build/TestAction output/TestAction_${{ github.sha }}

      # 创建 GitHub Release 并上传构建产物
      - name: Create Release
        if: steps.check_version.outcome == 'success'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.head_commit.message }}
          release_name: Release ${{ github.event.head_commit.message }}
          draft: false
          prerelease: false

      - name: Upload build artifacts to Release
        if: steps.check_version.outcome == 'success'
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/TestAction_${{ github.sha }}
          asset_name: TestAction_${{ github.sha }}
          asset_content_type: application/octet-stream
